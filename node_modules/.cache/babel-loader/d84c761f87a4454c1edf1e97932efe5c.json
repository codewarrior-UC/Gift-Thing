{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Gift-Thing\\\\src\\\\UpdateEmployer.js\";\nimport React from \"react\";\nimport AdminService from \"./services/AdminService\";\nimport \"./modal.css\";\nimport FindEmployer from \"./FindEmployer\"; //import employeerlist from \"./EmployeerList\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Employer extends React.Component {\n  constructor() {\n    super();\n\n    this.save = event => {\n      event.preventDefault();\n      var ob = {\n        user_id: this.hfCompanyidbox.value,\n        first_name: this.fnamebox.value,\n        last_name: this.lnamebox.value,\n        email: this.emailbox.value,\n        mobile_number: this.mobilebox.value,\n        password: this.passbox.value,\n        company_name: this.cnamebox.value\n      };\n      var pro = AdminService.createemployer(ob);\n      console.log(\"Employeer id\");\n      pro.then(response => response.json()).then(data => {\n        this.setState({\n          'createemployer': data.data.result\n        });\n        console.log(\"ffdg\");\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handelClick = () => {\n      setTimeout(() => {\n        window.location.reload(1);\n      }, 9500);\n      console.log(\"page to reload\");\n    };\n\n    this.state = {\n      msg: \"\",\n      createemployer: [],\n      findemployer: []\n    };\n  }\n\n  componentDidMount() {\n    AdminService.getemployer().then(response => response.json()).then(data => {\n      this.setState({\n        findemployee: data.data\n      });\n      console.log(\"data\", data.data);\n    });\n  }\n\n  componentDidCatch(error, _errorInfo) {\n    console.log(\"error--\", error);\n  }\n\n  componentDidUpdate() {}\n\n  onTodoChange(value) {\n    this.setState({\n      userId: value\n    }); //console.log(\"value\", value);\n  } // handleCallback = (childData) => {\n  //   // debugger;\n  //   console.log(\"childData\", childData);\n  //   this.setState({ namefield: childData });\n  // };\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section contact-me\",\n        id: \"menubars\",\n        \"data-section\": \"section4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"headr\",\n              children: \"Employer Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line-dec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FindEmployer, {\n            user_id: this.props.user_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  id: \"contact\",\n                  onSubmit: this.save\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Gift-Thing/src/UpdateEmployer.js"],"names":["React","AdminService","FindEmployer","Employer","Component","constructor","save","event","preventDefault","ob","user_id","hfCompanyidbox","value","first_name","fnamebox","last_name","lnamebox","email","emailbox","mobile_number","mobilebox","password","passbox","company_name","cnamebox","pro","createemployer","console","log","then","response","json","data","setState","result","catch","err","handelClick","setTimeout","window","location","reload","state","msg","findemployer","componentDidMount","getemployer","findemployee","componentDidCatch","error","_errorInfo","componentDidUpdate","onTodoChange","userId","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAO,aAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACC;;;;AACD,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAwBdC,IAxBc,GAwBNC,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,EAAE,GAAG;AACPC,QAAAA,OAAO,EAAE,KAAKC,cAAL,CAAoBC,KADtB;AAEPC,QAAAA,UAAU,EAAE,KAAKC,QAAL,CAAcF,KAFnB;AAGPG,QAAAA,SAAS,EAAE,KAAKC,QAAL,CAAcJ,KAHlB;AAIPK,QAAAA,KAAK,EAAE,KAAKC,QAAL,CAAcN,KAJd;AAKPO,QAAAA,aAAa,EAAE,KAAKC,SAAL,CAAeR,KALvB;AAMPS,QAAAA,QAAQ,EAAE,KAAKC,OAAL,CAAaV,KANhB;AAOPW,QAAAA,YAAY,EAAE,KAAKC,QAAL,CAAcZ;AAPrB,OAAT;AASA,UAAIa,GAAG,GAAGxB,YAAY,CAACyB,cAAb,CAA4BjB,EAA5B,CAAV;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAH,MAAAA,GAAG,CACAI,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,aAAKC,QAAL,CAAc;AAAE,4BAAkBD,IAAI,CAACA,IAAL,CAAUE;AAA9B,SAAd;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAED,OANH,EAOGO,KAPH,CAOUC,GAAD,IAAS;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACD,OATH;AAUD,KA/Ca;;AAAA,SAgDdC,WAhDc,GAgDA,MAAM;AAClBC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,CAAvB;AACD,OAFS,EAEP,IAFO,CAAV;AAGAd,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KArDa;;AAEZ,SAAKc,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,EADM;AAEXjB,MAAAA,cAAc,EAAE,EAFL;AAGXkB,MAAAA,YAAY,EAAC;AAHF,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB5C,IAAAA,YAAY,CAAC6C,WAAb,GACGjB,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEc,QAAAA,YAAY,EAAEf,IAAI,CAACA;AAArB,OAAd;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAAI,CAACA,IAAzB;AACD,KALH;AAMD;;AAEDgB,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,UAAR,EAAoB;AACnCvB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBqB,KAAvB;AACA;;AACDE,EAAAA,kBAAkB,GAAE,CACnB;;AAgCFC,EAAAA,YAAY,CAACxC,KAAD,EAAQ;AAClB,SAAKqB,QAAL,CAAc;AACZoB,MAAAA,MAAM,EAAEzC;AADI,KAAd,EADkB,CAIlB;AACD,GA5DmD,CA6DpD;AACA;AACA;AACA;AACA;;;AACA0C,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,wBAAa,UAHf;AAAA,+BAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE;AAAI,cAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAE,KAAKC,KAAL,CAAW7C;AAAlC;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,uCACE;AAAM,kBAAA,EAAE,EAAC,SAAT;AAAmB,kBAAA,QAAQ,EAAE,KAAKJ;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA+HD;;AAnMmD","sourcesContent":["import React from \"react\";\r\nimport AdminService from \"./services/AdminService\";\r\nimport \"./modal.css\";\r\nimport FindEmployer from \"./FindEmployer\";\r\n //import employeerlist from \"./EmployeerList\";\r\nexport default class Employer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      msg: \"\",\r\n      createemployer: [],\r\n      findemployer:[]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AdminService.getemployer()\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ findemployee: data.data });\r\n        console.log(\"data\", data.data);\r\n      });\r\n  }\r\n\r\n  componentDidCatch(error, _errorInfo) {\r\n    console.log(\"error--\", error);\r\n   }\r\n   componentDidUpdate(){\r\n   }\r\n\r\n  save = (event) => {\r\n    event.preventDefault();\r\n    var ob = {\r\n      user_id: this.hfCompanyidbox.value,\r\n      first_name: this.fnamebox.value,\r\n      last_name: this.lnamebox.value,\r\n      email: this.emailbox.value,\r\n      mobile_number: this.mobilebox.value,\r\n      password: this.passbox.value,\r\n      company_name: this.cnamebox.value,\r\n    };\r\n    var pro = AdminService.createemployer(ob);\r\n    console.log(\"Employeer id\", )\r\n    pro\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ 'createemployer': data.data.result });\r\n        console.log(\"ffdg\")\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  handelClick = () => {\r\n    setTimeout(() => {\r\n      window.location.reload(1);\r\n    }, 9500);\r\n    console.log(\"page to reload\");\r\n  };\r\n  onTodoChange(value) {\r\n    this.setState({\r\n      userId: value,\r\n    });\r\n    //console.log(\"value\", value);\r\n  }\r\n  // handleCallback = (childData) => {\r\n  //   // debugger;\r\n  //   console.log(\"childData\", childData);\r\n  //   this.setState({ namefield: childData });\r\n  // };\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        <section\r\n          className=\"section contact-me\"\r\n          id=\"menubars\"\r\n          data-section=\"section4\"\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"section-heading\">\r\n              <h2 id=\"headr\">Employer Update</h2>\r\n              <div className=\"line-dec\"></div>\r\n            </div>\r\n            <FindEmployer user_id={this.props.user_id}/>\r\n            <div className=\"row\">\r\n              <div className=\"right-content\">\r\n                <div className=\"container\">\r\n                  <form id=\"contact\" onSubmit={this.save}>\r\n                    {/* <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <fieldset>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control formcol\"\r\n                            ref={(c) => (this.hfCompanyidbox = c)}\r\n                           value={this.props.user_id}\r\n                            placeholder=\"UserID...\"\r\n                            style={{ color: \"black\" }}\r\n                            onClick={(e) => this.onTodoChange(\"\")}\r\n\r\n                            required\r\n                          />\r\n                        </fieldset>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <fieldset>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={(c) => (this.fnamebox = c)}\r\n                            placeholder=\"First Name...\"\r\n                            style={{ color: \"black\" }}\r\n                            required\r\n                          />\r\n                        </fieldset>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <fieldset>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={(c) => (this.lnamebox = c)}\r\n                            placeholder=\"Last Name...\"\r\n                            style={{ color: \"black\" }}\r\n                            required\r\n                          />\r\n                        </fieldset>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <fieldset>\r\n                          <input\r\n                            // name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            ref={(c) => (this.emailbox = c)}\r\n                            placeholder=\"Your email...\"\r\n                            style={{ color: \"black\" }}\r\n                            required\r\n                          />\r\n                        </fieldset>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <fieldset>\r\n                          <input\r\n                            type=\"phone\"\r\n                            className=\"form-control\"\r\n                            ref={(c) => (this.mobilebox = c)}\r\n                            placeholder=\"Mobile Number...\"\r\n                            style={{ color: \"black\" }}\r\n                            required\r\n                          />\r\n                        </fieldset>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <fieldset>\r\n                          <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            ref={(c) => (this.passbox = c)}\r\n                            placeholder=\"Password...\"\r\n                            style={{ color: \"black\" }}\r\n                            required\r\n                          />\r\n                        </fieldset>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <fieldset>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={(c) => (this.cnamebox = c)}\r\n                            placeholder=\"Company Name...\"\r\n                            style={{ color: \"black\" }}\r\n                            required\r\n                          />\r\n                        </fieldset>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <fieldset>\r\n                          <button\r\n                            type=\"submit\"\r\n                            id=\"form-submit\"\r\n                            className=\"button\"\r\n                            onClick={this.handelClick}\r\n                          >\r\n                            Update\r\n                          </button>\r\n                        </fieldset>\r\n                      </div>\r\n                    </div> */}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}