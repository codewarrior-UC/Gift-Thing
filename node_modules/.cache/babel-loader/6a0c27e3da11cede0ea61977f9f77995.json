{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Gift-Thing\\\\src\\\\components\\\\FilteringTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useSortBy, useGlobalFilter, usePagination } from 'react-table';\nimport { GROUPED_COLUMNS } from \"./columns\";\nimport \"../\"; // set up a component for the table that will take in and display the employee information\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FilteringTable = props => {\n  _s();\n\n  const columns = useMemo(() => GROUPED_COLUMNS, []);\n  const data = props.data;\n  const tableInstance = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, useGlobalFilter, useSortBy, usePagination); // destructure table instance to get the required components\n\n  const {\n    getTableProps,\n    setPageSize,\n    gotoPage,\n    state,\n    getTableBodyProps,\n    canNextPage,\n    canPreviousPage,\n    // headerGroups, \n    page,\n    nextPage,\n    previousPage,\n    pageOptions,\n    pageCount,\n    prepareRow\n  } = tableInstance;\n  const {\n    pageSize,\n    pageIndex\n  } = state; // Sets up the table JSX that will be displayed on the site, including a search filter functionality\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: [\" \", cell.render(\"Cell\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 48\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [pageIndex + 1, \" of \", pageOptions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: pageSize,\n          onChange: e => setPageSize(Number(e.target.value)),\n          children: [10, 25, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [' ', \"Go To Page: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            defaultValue: pageIndex + 1,\n            onChange: e => {\n              const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(pageNumber);\n            },\n            style: {\n              width: '50px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nextPrevious\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          onClick: () => gotoPage(0),\n          disabled: !canPreviousPage,\n          children: '<<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          onClick: () => nextPage(),\n          disabled: !canNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          onClick: () => gotoPage(pageCount - 1),\n          disabled: !canNextPage,\n          children: '>>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilteringTable, \"hgXHdILXnn80K6cH/otfF3TgJlE=\", false, function () {\n  return [useTable];\n});\n\n_c = FilteringTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteringTable\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Gift-Thing/src/components/FilteringTable.js"],"names":["React","useMemo","useTable","useSortBy","useGlobalFilter","usePagination","GROUPED_COLUMNS","FilteringTable","props","columns","data","tableInstance","initialState","pageIndex","getTableProps","setPageSize","gotoPage","state","getTableBodyProps","canNextPage","canPreviousPage","page","nextPage","previousPage","pageOptions","pageCount","prepareRow","pageSize","map","row","getRowProps","cells","cell","getCellProps","render","length","e","Number","target","value","pageNumber","width"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable, useSortBy, useGlobalFilter, usePagination } from 'react-table'\nimport { GROUPED_COLUMNS } from \"./columns\"\nimport \"../\"\n\n// set up a component for the table that will take in and display the employee information\nexport const FilteringTable = (props) => {\n    const columns = useMemo(() => GROUPED_COLUMNS, [])\n    const data = props.data\n    const tableInstance = useTable({\n        columns,\n        data,\n        initialState: {pageIndex: 0}\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination)\n\n\n    // destructure table instance to get the required components\n    const { \n        getTableProps,\n        setPageSize,\n        gotoPage,\n        state,\n        getTableBodyProps, \n        canNextPage, \n        canPreviousPage, \n        // headerGroups, \n        page, \n        nextPage, \n        previousPage, \n        pageOptions, \n        pageCount,\n        prepareRow }\n        = tableInstance\n\n    const { pageSize, pageIndex } = state\n\n\n    // Sets up the table JSX that will be displayed on the site, including a search filter functionality\n    return (\n        <>\n        {/* <GlobalFilter filter = {globalFilter} setFilter = {setGlobalFilter} /> */}\n        <table {...getTableProps()}>\n            {/* <thead> \n                {headerGroups.map((headerGroup) => (\n                    // <tr {...headerGroup.getHeaderGroupProps()}>\n                       <tr > {\n                            headerGroup.headers.map((column) => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render(\"Header\")}\n                                    <span>\n                                        { column.isSorted ? ( column.isSortedDesc ? <img src=\"https://cdn3.iconfinder.com/data/icons/faticons/32/arrow-down-01-512.png\" alt=\"desc\" /> : <img src=\"https://cdn3.iconfinder.com/data/icons/faticons/32/arrow-up-01-512.png\" alt=\"asc\" />) : \"\" }\n                                    </span>\n                                </th>\n                            ))}\n                    </tr>\n                ))}\n            </thead> */}\n            <tbody {...getTableBodyProps()}>\n                {\n                    page.map( row=> {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                     row.cells.map( cell => {\n                                        return <td {...cell.getCellProps()}> {cell.render(\"Cell\")}</td>\n                                    })\n                                }\n                            </tr>\n                        )\n                    })}\n            </tbody>\n        </table>\n        {/* Sets up the pagination feature for the table */}\n        <div className=\"pagination\">\n            <div className =\"page\">\n            <span>\n                Page{' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>{' '}\n            </span>\n            <select value = {pageSize} onChange = {e => setPageSize(Number(e.target.value))}>\n                {\n                    [10,25,50].map(pageSize => (\n                        <option key = {pageSize} value = {pageSize}>\n                            Show {pageSize}\n                        </option>\n                    ))\n                }\n            </select>\n            <span>\n                {' '}Go To Page: {' '} \n                <input type=\"number\" defaultValue = {pageIndex + 1} onChange = {e => {\n                    const pageNumber = e.target.value ? Number(e.target.value) -1 : 0\n                    gotoPage(pageNumber)\n                }} \n                style = {{ width: '50px'}}/>\n            </span>\n            </div>\n            <div className = \"nextPrevious\">\n            <button className = \"btn btn-outline-secondary\" onClick = {() => gotoPage(0)} disabled ={!canPreviousPage}>{'<<'}</button>\n            <button className = \"btn btn-outline-secondary\" onClick = {() => previousPage()} disabled = {!canPreviousPage}>Previous</button>\n            <button className = \"btn btn-outline-secondary\" onClick = {() => nextPage()} disabled = {!canNextPage}>Next</button>\n            <button className = \"btn btn-outline-secondary\" onClick = {() => gotoPage(pageCount - 1)} disabled ={!canNextPage}>{'>>'}</button>\n        </div>\n        </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}